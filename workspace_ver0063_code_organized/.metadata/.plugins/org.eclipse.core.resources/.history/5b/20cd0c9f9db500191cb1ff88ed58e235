import java.awt.Desktop;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Utilities {
	
	Connection connection;
	PreparedStatement preparedStatement;
	PreparedStatement preparedStatementForPriCustID;
	Statement statement;
	ResultSet resultSet;
	ResultSet resultAutomobileSet;
	ResultSet resultTravelSet;
	ResultSet resultHomeSet;
	ResultSet resultDetailedInfoSet;
	ResultSet resultFamilyInfoSet;
	ResultSet resultCommercialInfoSet;
	ResultSet resultCalendarInfoSet;

	public int getRowCount(ResultSet resultSet) {
	    if (resultSet == null) {
	        return 0;
	    }
	    try {
	        resultSet.last();
	        return resultSet.getRow();
	    } catch (SQLException exp) {
	        exp.printStackTrace();
	    } finally {
	        try {
	            resultSet.beforeFirst();
	        } catch (SQLException exp) {
	            exp.printStackTrace();
	        }
	    }
	    return 0;
	}
	
	public void fileOpen(File dir) {
		
		final String prefix = GUIForCustomerCare.idTextField.getText() + "_";
		
		dir.listFiles(new FileFilter() {
		    @Override
		    public boolean accept(File pathname) {
				System.out.println("candidates = " + pathname.getName().startsWith(prefix));
				  if (pathname.getName().startsWith(prefix)) {		    								
					  try {
						  System.out.println("file name = " + pathname.getName());
						  Desktop.getDesktop().open(new File(dir + "/" + pathname.getName()));
					  } catch (IOException e) {
						// TODO Auto-generated catch block
						  e.printStackTrace();
					  }
				  }
				  return pathname.getName().startsWith(prefix);
		    } 
		});	
	}
	
	public void closeDatabase()
	{
		try
		{
			if (connection != null)
			{
				connection.close();
			}
			 
			if (statement != null)
			{
				statement.close();
			}
			 
			if (resultSet != null)
			{
				resultSet.close();
			}
		}
		catch (SQLException e)
		{
			System.out.println("closeDatabase" +  e.getStackTrace());
		}
	}
	
	public String idCheck()
	{
		String result = null;

		try
		{	
			connection = DriverManager.getConnection(DatabaseConstant.URL, DatabaseConstant.USER, DatabaseConstant.PASSWORD);

			statement = connection.createStatement();
 
			resultSet = statement.executeQuery("SELECT IFNULL(MAX(CUST_ID),0)  +1 FROM CCCUSTOM;");
			
			if (resultSet.next())
			{
				result = resultSet.getString(1);
				System.out.println("result =" + result);
			}
		}
		catch (SQLException e)
		{
			System.out.println("IDCheck" +  e.getStackTrace());
		}
		
		finally
		{
			closeDatabase();
		}
		return result;
	}
	
	public String timeStampCheck()
	{
		String result = null;
		
		try
		{	
			connection = DriverManager.getConnection(DatabaseConstant.URL, DatabaseConstant.USER, DatabaseConstant.PASSWORD);

			statement = connection.createStatement();
 
			resultSet = statement.executeQuery("SELECT DATE_FORMAT(now(),'%Y%m%d%H%i%s')");
			
			if (resultSet.next())
			{
				result = resultSet.getString(1);
				System.out.println("result = " + result);
			}
		}
		catch (SQLException e)
		{
			System.out.println("timeStampCheck" +  e.getStackTrace());
		}
		
		finally
		{
			closeDatabase();
		}
		return result;
	}
}
