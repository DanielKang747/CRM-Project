import java.awt.Desktop;
import java.io.File;
import java.io.FileFilter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class FileSearch {

	private String[] fileList = {"/Users/Kang/Applications", "/Users/Kang/Movies", "/Users/Kang/Music", "/Users/Kang/Library", "/Users/Kang/.Trash"};
	
	private String fileNameToSearch;
	private List<String> result = new ArrayList<String>();
	
	public String getFileNameToSearch() {
		return fileNameToSearch;
	}

	public void setFileNameToSearch(String fileNameToSearch) {
		this.fileNameToSearch = fileNameToSearch;
	}
	
	public List<String> getResult() {
		return result;
	}
	
	public static void main(String[] args) {
	
		FileSearch fileSearch = new FileSearch();
	  
		//try different directory and filename :)
			fileSearch.searchDirectory(new File("/Users/Kang/Desktop"), "0000000001_");
	
		int count = fileSearch.getResult().size();
		if(count ==0){
			System.out.println("\nNo result found!");
		}else{
		    System.out.println("\nFound " + count + " result!\n");
		    for (String matched : fileSearch.getResult()){
			System.out.println("Found : " + matched);
		    }
		}
	}
	
	public void searchDirectory(File directory, String fileNameToSearch) {
	
		setFileNameToSearch(fileNameToSearch);
	
		if (directory.isDirectory()) {
		    search(directory);
		} else {
		    System.out.println(directory.getAbsoluteFile() + " is not a directory!");
		}
	}
	
	private void search(File file) {
		
		if (file.isDirectory()) {		
	            //do you have permission to read this directory?	
			if (file.canRead()) {
				System.out.println("file = " + file.getAbsolutePath());
	    			if (!Arrays.asList(fileList).contains(file.getAbsolutePath())) {
	    				for (File temp : file.listFiles()) {
	    					if (temp.isDirectory()) {
	    						search(temp);
	    					} else {
	    						File[] candidates = file.listFiles(new FileFilter() {
		    					    @Override
		    					    public boolean accept(File pathname) {
		    							System.out.println("candidates = " + pathname.getName().startsWith(fileNameToSearch));
		    							  if (pathname.getName().startsWith(fileNameToSearch)) {
		    								  System.out.println(pathname.getName());
		    								
		    								  try {
		    									  System.out.println("file name = " + pathname.getName());
		    									  Desktop.getDesktop().open(new File(file + "/" + pathname.getName()));
		    								  } catch (IOException e) {
		    									// TODO Auto-generated catch block
		    									  e.printStackTrace();
		    								  }
		    							  }
		    							  return pathname.getName().startsWith(fileNameToSearch);
		    					    } 
	    						});	
	    					}
	    				}
	    			}
			} else {
				System.out.println(file.getAbsoluteFile() + "Permission Denied");
			}
		}
    }
}
